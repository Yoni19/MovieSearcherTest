[{"/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/index.jsx":"1","/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/NavBar/index.jsx":"2","/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/SearchBar/index.jsx":"3","/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/MovieList/index.jsx":"4","/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/MovieInfo/index.jsx":"5"},{"size":349,"mtime":1611221895241,"results":"6","hashOfConfig":"7"},{"size":655,"mtime":1610909225424,"results":"8","hashOfConfig":"7"},{"size":410,"mtime":1611221924083,"results":"9","hashOfConfig":"7"},{"size":2408,"mtime":1611222010174,"results":"10","hashOfConfig":"7"},{"size":537,"mtime":1611220920689,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"31vx8a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/index.jsx",[],["26","27"],"/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/NavBar/index.jsx",[],"/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/SearchBar/index.jsx",[],["28","29"],"/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/MovieList/index.jsx",["30","31"],"import React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport MovieInfo from \"../MovieInfo\";\r\nimport \"./style.scss\";\r\n\r\nconst MovieList = () => {\r\n  const [selectedMovie, setSelectedMovie] = useState();\r\n  const [search, setSearch] = useState();\r\n  const [movies, setMovies] = useState();\r\n\r\n  const fetchMovies = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=9478bf10b8e1167ddee123de7d993b63`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMovies(data.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const getInformation = (movieTitle) => {\r\n    console.log(movieTitle);\r\n    let movieInformation = movies.filter((movie) => movie.title === movieTitle);\r\n    setSelectedMovie(movieInformation[0]);\r\n    console.log(\"selected :\", selectedMovie);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    console.log(e.target.value);\r\n    setSearch(e.target.value);\r\n    moviesFiltration(e.target.value);\r\n  };\r\n\r\n  const moviesFiltration = (searchValue) => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=9478bf10b8e1167ddee123de7d993b63&query=${searchValue}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setMovies(response.results);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  if (!movies) {\r\n    return (\r\n      <div>\r\n        <SearchBar search={handleSearch} />\r\n        <h1>Loading movies...</h1>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <SearchBar search={handleSearch} />\r\n        <h1><b>Movies List</b></h1>\r\n        <br/>\r\n\r\n        <div className=\"movies-container\">\r\n          <section className=\"movie-list\">\r\n            {movies &&\r\n              movies.map((movie) => (\r\n                <div className = \"one_movie_card\">\r\n                <a key={movie.id} onClick={() => getInformation(movie.title)}>\r\n                  {movie.title}\r\n                </a>\r\n                <br/>\r\n                </div>\r\n                \r\n              ))}\r\n              \r\n          </section>\r\n          <section className=\"movie-details\">\r\n            {selectedMovie && <MovieInfo movie={selectedMovie} />}\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MovieList;\r\n","/mnt/c/Users/Yoni/Desktop/Fleet/fleet-movie-search/src/Components/MovieInfo/index.jsx",["32"],"import React from \"react\";\r\nimport './style.scss'\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n  return (\r\n    <div>\r\n      <section>\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${props.movie.poster_path}`}\r\n        />\r\n        <div>\r\n          <h3>{props.movie.title}</h3>\r\n          <p>\r\n            <b>NOTE</b> : {props.movie.vote_average} / 10\r\n          </p>\r\n\r\n          <p>{props.movie.overview}</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section></section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"33","replacedBy":"37"},{"ruleId":"35","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":69,"column":17,"nodeType":"45","endLine":69,"endColumn":79},{"ruleId":"46","severity":1,"message":"47","line":9,"column":9,"nodeType":"45","endLine":11,"endColumn":11},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unused-vars","'search' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]